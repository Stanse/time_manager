"""
Start command handler
"""
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import ContextTypes
from sqlalchemy.orm import Session

from src.bot.handlers.base import BaseHandler
from src.services.user_service import UserService
from src.config.settings import get_settings


class StartHandler(BaseHandler):
    """Handler for /start command"""

    async def execute(
        self,
        update: Update,
        context: ContextTypes.DEFAULT_TYPE,
        session: Session
    ):
        """Execute /start command"""
        user = update.effective_user
        if not user:
            return

        # Register user
        user_service = UserService(session)
        db_user = user_service.get_or_create_user(user)

        settings = get_settings()

        # Create keyboard with Mini App button
        keyboard = [
            [
                InlineKeyboardButton(
                    text="üçÖ –û—Ç–∫—Ä—ã—Ç—å Pomodoro Timer",
                    web_app=WebAppInfo(url=settings.mini_app_url)
                )
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        welcome_text = f"""
üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–µ—Ö–Ω–∏–∫–æ–π Pomodoro:

üçÖ *Pomodoro Timer* - —Ç–∞–π–º–µ—Ä —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º —Å–µ—Å—Å–∏–π
üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞* - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
üîî *–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è* - –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–π–º–µ—Ä
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
/help - –°–ø—Ä–∞–≤–∫–∞

–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å! üëá
"""

        await update.message.reply_text(
            text=welcome_text,
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )
